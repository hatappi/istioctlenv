#!/usr/bin/env bash
# Summary: List all istioctl versions available to istioctlenv
# Usage: istioctlenv versions [--bare] [--skip-aliases]
#
# Lists all istioctl versions found in `$ISTIOCTLENV_ROOT/versions/*'.

set -e
[ -n "$ISTIOCTLENV_DEBUG" ] && set -x

unset bare
unset skip_aliases
for arg; do
  case "$arg" in
  # NOTE: Provide istioctlenv completions
  --complete )
    echo --bare
    echo --skip-aliases
    exit ;;
  --bare )
    bare=1
    ;;
  --skip-aliases )
    skip_aliases=1
    ;;
  * )
    istioctlenv-help --usage versions >&2
    exit 1
    ;;
  esac
done

versions_dir="${ISTIOCTLENV_ROOT}/versions"

if ! enable -f "${BASH_SOURCE%/*}"/istioctlenv-realpath.dylib realpath 2>/dev/null; then
  if [ -n "$ISTIOCTLENV_NATIVE_EXT" ]; then
    echo "istioctlenv: failed to load 'realpath' builtin" >&2
    exit 1
  fi

  READLINK=$(type -p greadlink readlink | head -1)
  if [ -z "$READLINK" ]; then
    echo "istioctlenv: cannot find readlink - are you missing GNU coreutils?" >&2
    exit 1
  fi

  resolve_link() {
    $READLINK "$1"
  }

  realpath() {
    local cwd="$PWD"
    local path="$1"
    local name

    while [ -n "$path" ]; do
      name="${path##*/}"
      [ "$name" = "$path" ] || cd "${path%/*}"
      path="$(resolve_link "$name" || true)"
    done

    echo "${PWD}/$name"
    cd "$cwd"
  }
fi

if [ -d "$versions_dir" ]; then
  versions_dir="$(realpath "$versions_dir")"
fi

if [ -n "$bare" ]; then
  hit_prefix=""
  miss_prefix=""
  current_versions=()
  include_system=""
else
  hit_prefix="* "
  miss_prefix="  "
  OLDIFS="$IFS"
  IFS=: current_versions=($(istioctlenv-version-name || true))
  IFS="$OLDIFS"
  include_system="1"
fi

num_versions=0

exists() {
  local car="$1"
  local cdar
  shift
  for cdar in "$@"; do
    if [ "${car}" == "${cdar}" ]; then
      return 0
    fi
  done
  return 1
}

print_version() {
  if exists "$1" "${current_versions[@]}"; then
    echo "${hit_prefix}$1 (set by $(istioctlenv-version-origin))"
  else
    echo "${miss_prefix}$1"
  fi
  num_versions=$((num_versions + 1))
}

# Include "system" in the non-bare output, if it exists
if [ -n "$include_system" ] && ISTIOCTLENV_VERSION=system istioctlenv-which istioctl >/dev/null 2>&1; then
  print_version system
fi

shopt -s nullglob
for path in "$versions_dir"/*; do
  if [ -d "$path" ]; then
    if [ -n "$skip_aliases" ] && [ -L "$path" ]; then
      target="$(realpath "$path")"

      if [ "${target%/*}" == "$versions_dir" ]; then
        continue
      fi
    fi
    print_version "${path##*/}"
  fi
done
shopt -u nullglob

if [ "$num_versions" -eq 0 ] && [ -n "$include_system" ]; then
  echo "Warning: no istioctl detected on the system" >&2
  exit 1
fi
